[project]
name = "hydra-example"
version = "0.1.0"
description = "Add your description here"
authors = [{ name = "Thomas M Kehrenberg", email = "tmke8@posteo.net" }]
dependencies = [
    "hydra-core~=1.3.2",
    "ranzen~=2.5.1",
    "torch~=2.3.0",
    "wandb~=0.17.0",
    "hydra-submitit-launcher~=1.2.0",
]
readme = "README.md"
requires-python = ">= 3.10"

[tool.rye]
managed = true
virtual = true
dev-dependencies = ["ruff~=0.4.4"]

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"
reportUnknownMemberType = "none"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.format]
quote-style = "preserve"

[tool.ruff.lint]
select = [
    "A",   # flake8-builtins
    "ARG", # flake8-unused-args
    "B",   # bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "FBT", # boolean trap
    "I",   # isort
    "INP", # implicit namespace package
    "N",   # pep8-naming
    "PLC", # pylint convention
    "PLE", # pylint error
    "PLR", # pylint refactor
    "PLW", # pylint warning
    "PTH", # flake8-use-pathlib
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",
]
ignore = [
    "A003",    # builtins as class attribute
    "E501",    # line too long (conflicts with formatter)
    "N812",    # case of import alias
    "PLR0402", # useless import alias
    "PLR2004", # magic number comparison
    "PLR0913", # too many arguments
    "PLW2901", # overwriting loop variables
    "PLC0105", # mark variance in typevar name
    "UP038",   # use X | Y in isinstance
    "W191",    # tab indentation (conflicts with formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F403",
    "PLC0414", # reexporting
]

[tool.ruff.lint.isort]
known-third-party = ["hydra"]
extra-standard-library = ["typing_extensions"]
no-lines-before = ["future", "standard-library"]
force-sort-within-sections = true
split-on-trailing-comma = false

[tool.ruff.lint.pylint]
max-statements = 60 # default: 50
max-branches = 13   # default: 12

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src"]
